name: Publish Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    outputs:
      version: ${{ steps.version.outputs.version }}
      image: ${{ steps.image.outputs.image }}

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.4
        with:
          persist-credentials: false

      - name: Extract version from package.json
        id: version
        run: echo "version=$(jq -r '.version' package.json)" >> "$GITHUB_OUTPUT"

      - name: Derive Image Name
        id: image
        run: echo "image=ghcr.io/${{ github.repository_owner }}/resume-forge" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          tags: |
            type=semver,pattern={{version}},prefix=v,value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},prefix=v,value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},prefix=v,value=${{ steps.version.outputs.version }}
            type=raw,value=latest
          images: |
            ${{ steps.image.outputs.image }}

      - name: Prepare a unique name for Artifacts
        id: artifact_name
        run: |
          name=$(echo -n "${{ matrix.platform }}" | sed -e 's/[ \t:\/\\"<>|*?]/-/g' -e 's/--*/-/g')
          echo "name=$name" >> "$GITHUB_OUTPUT"

      - name: Build and Push by Digest
        uses: docker/build-push-action@v5.3.0
        id: build
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,scope=${{ matrix.platform }},mode=max
          outputs: type=image,name=${{ steps.image.outputs.image }},push-by-digest=true,name-canonical=true,push=true
          target: release
          build-args: |
            NX_CLOUD_ACCESS_TOKEN=${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

      - name: Export Digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload Digest
        uses: actions/upload-artifact@v4.3.3
        with:
          name: digests-${{ steps.artifact_name.outputs.name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    needs:
      - build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.4
        with:
          persist-credentials: false

      - name: Download Digest
        uses: actions/download-artifact@v4.1.7
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          tags: |
            type=semver,pattern={{version}},prefix=v,value=${{ needs.build.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},prefix=v,value=${{ needs.build.outputs.version }}
            type=semver,pattern={{major}},prefix=v,value=${{ needs.build.outputs.version }}
            type=raw,value=latest
          images: |
            ${{ needs.build.outputs.image }}

      - name: Create Docker Manifest List and Push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ needs.build.outputs.image }}@sha256:%s ' *)

      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ needs.build.outputs.image }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ needs.build.outputs.image }}:latest
